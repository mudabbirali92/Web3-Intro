/*
The only changes we have made in this part 3 of excercise 4 is that we have created a recipt of the transaction and for that
we just used the method of sendSignedTransaction's "then()" method
*/

//import stuff...
var Web3=require("web3");// just like an import
var Tx = require('ethereumjs-tx').Transaction


const targetUrl="HTTP://127.0.0.1:7545";
let Web3Isnt=new Web3(targetUrl);

const ownerAddress="0xD63197CB46d193D192e544be0DaBEB57D1997437";
const privateKey1="f656331205fcbf71cb98d234066725a4094acc25ab1e6f40cd72c9153c376d9d";


var theBytcode="601c60005560c0604052600c60808190526b4d7564616262697220416c6960a01b60a09081526100329160019190610045565b5034801561003f57600080fd5b506100d8565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061008657805160ff19168380011785556100b3565b828001600101855582156100b3579182015b828111156100b3578251825591602001919060010190610098565b506100bf9291506100c3565b5090565b5b808211156100bf57600081556001016100c4565b610460806100e76000396000f3fe60806040526004361061004a5760003560e01c806317d7de7c1461004f57806348c981e2146100d9578063967e6e65146101015780639c080f5d14610128578063c47f00271461015b575b600080fd5b34801561005b57600080fd5b5061006461020e565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561009e578181015183820152602001610086565b50505050905090810190601f1680156100cb5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6100ff600480360360208110156100ef57600080fd5b50356001600160a01b03166102a3565b005b34801561010d57600080fd5b506101166102dc565b60408051918252519081900360200190f35b34801561013457600080fd5b506101166004803603602081101561014b57600080fd5b50356001600160a01b03166102e2565b34801561016757600080fd5b506100646004803603602081101561017e57600080fd5b81019060208101813564010000000081111561019957600080fd5b8201836020820111156101ab57600080fd5b803590602001918460018302840111640100000000831117156101cd57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506102ef945050505050565b60018054604080516020601f600260001961010087891615020190951694909404938401819004810282018101909252828152606093909290918301828280156102995780601f1061026e57610100808354040283529160200191610299565b820191906000526020600020905b81548152906001019060200180831161027c57829003601f168201915b5050505050905090565b6040516001600160a01b038216903480156108fc02916000818181858888f193505050501580156102d8573d6000803e3d6000fd5b5050565b60005490565b6001600160a01b03163190565b8051606090610305906001906020850190610397565b5060018054604080516020600284861615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561038b5780601f106103605761010080835404028352916020019161038b565b820191906000526020600020905b81548152906001019060200180831161036e57829003601f168201915b50505050509050919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106103d857805160ff1916838001178555610405565b82800160010185558215610405579182015b828111156104055782518255916020019190600101906103ea565b50610411929150610415565b5090565b5b80821115610411576000815560010161041656fea2646970667358221220aea8a1a5df4d82dc55f74fc212ee6d87e48548c0e0be1708fe4ce87bf5471f6664736f6c634300060c0033"



const theBytcodeBuffer=Buffer.from(theBytcode,'hex');

// Now creating buffer for our private key of owner/delpoyer
const priavetKey1Buffer=Buffer.from(privateKey1,'hex');

//
Web3Isnt.eth.getTransactionCount(ownerAddress, (err1,txCount)=>
{
    if(err1){
        console.log("Could'nt initiate transaction")
    }

    else{
    // Crete Transaction....
    const txObject={
        nonce: Web3Isnt.utils.toHex(txCount),
        gasLimit: Web3Isnt.utils.toHex(1000000),
        gasPrice: Web3Isnt.utils.toHex(Web3Isnt.utils.toWei("10",'gwei')),
        //removed "to" from here...
        data: theBytcodeBuffer// Here we made a change
    };

    //Sign the transaction...
    const tx = new Tx(txObject);
    
    tx.sign(priavetKey1Buffer);

    const serializedTx = tx.serialize()
    const raw = '0x' + serializedTx.toString('hex')

    console.log(txObject);
    // Broadcast the transaction
    Web3Isnt.eth.sendSignedTransaction(raw, (err, txHash) => 
    {
        if(err)
        {
            console.log("Could'nt make transaction!",err)
        }
        else
        {
            console.log('Transaction successfull !! txHash is: ', txHash)
        }

    }).then(recipt=>{
        console.log(recipt)
        console.log(recipt.ownerAddress)
    })

}})

